package autoFactory;

/**
 * Это интерфейс нашей топливной системы с именем autoFactory.IFuelSystem.
 * <p>
 * Буква I в начале названия интерфейса - это одно из условно принятых подходов к
 * наименованию интерфейсов в Java.
 * <p>
 * Слово public означает то, что этот интерфейс доступен из любого места кода внутри нашей
 * программы.
 * <p>
 * Слово interface означает то, что здесь происходит определение интерфейса.
 */
public interface IFuelSystem {

    /**
     * Метод pushFuelToEngine служит для условной подачи топлива в двигатель автомобиля.
     * <p>
     * Слово boolean перед названием метода говорит о том, что данный метод возвращает
     * в ответ либо значение true (правда), либо false (ложь).
     * <p>
     * В скобках метода указываются параметры, которые метод принимает на вход при его вызове.
     *
     * @param fuelToBurnVolume параметр значения объема топлива, которое необходимо
     *                         передать в двигатель в виде целого числа, о чем говорит
     *                         указанный тип int.
     * @return данный метод возвращает значение true, если топлива для отправки в двигатель
     * достаточно в бензобаке, метод возвращает false, если топлива в бензобаке недостаточно.
     */
    boolean pushFuelToEngine(int fuelToBurnVolume);

    /**
     * Метод fuelToFillUpVolume служит для пополнения топлива в бензобаке.
     * <p>
     * Слово void перед названием метода говорит о том, что данный метод ничего не возвращает
     * в ответ.
     * <p>
     * В скобках метода указываются параметры, которые метод принимает на вход при его вызове.
     *
     * @param fuelToFillUpVolume параметр значения объема топлива, которым заполняется
     *                           бензобак в виде целого числа, о чем говорит указанный
     *                           тип int.
     */
    void fillUpFuel(int fuelToFillUpVolume);

    /**
     * Метод getCurrentFuelVolume служит для получения текущего объема топлива в бензобаке.
     * <p>
     * Слово int перед названием метода говорит о том, что данный метод возвращает в ответ
     * значение текущего объема топлива в виде целого числа.
     * <p>
     * В скобках метода отсутствуют параметры, значит данный метод не принимает никаких
     * параметров на вход при его вызове.
     *
     * @return данный метод возвращает целочисленное значение оставшегося объема
     * топлива в бензобаке топливной системы.
     */
    int getCurrentFuelVolume();

}
